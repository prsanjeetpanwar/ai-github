generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  imageUrl       String?
  firstName      String?
  lastName       String?
  emailAddress   String          @unique

  creditAddress  Int             @default(200)
  credits        Int             @default(200)
  questionsAsked Question[]
  userToProject  UserToProject[]
  stripeTransactions StripeTransactions[]
}


model StripeTransactions {
  id             String          @id @default(uuid())
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  
  userId         String
  user        User        @relation(fields: [userId],references: [id])
  credits     Int

}

model Project {
  id                  String                @id @default(uuid())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  name                String
  githubUrl           String
  deletedAt           DateTime?
  commit              Commit[]
  savedQuestion       Question[]
  sourceCodeEmbedding SourceCodeEmbedding[]
  userToProjects      UserToProject[]
}

model Question {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  question        String
  answer          String
  filesReferences Json?
  projectId       String
  userId          String
  project         Project  @relation(fields: [projectId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
}

model UserToProject {
  id        String   @id @default(uuid())
  createdAT DateTime @default(now())
  updatedAT DateTime @updatedAt
  userId    String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}

model Commit {
  id                 String   @id @default(uuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  projectId          String
  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  summary            String
  project            Project  @relation(fields: [projectId], references: [id])
}

model SourceCodeEmbedding {
  id               String  @id @default(uuid())
  summaryEmbedding String?
  sourceCode       String
  fileName         String
  summary          String
  projectId        String
  project          Project @relation(fields: [projectId], references: [id])
}
